name: Quarto Build (HTML + DOCX + PDF)

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      publish_local:
        description: "Skip rendering and publish repo's docs/ as-is"
        required: true
        default: "false"
        type: choice
        options: ["false","true"]

jobs:
  # =========================================================
  # A) VOLLER RENDER/COMPUTE AUF GITHUB
  #    - läuft auf push (normal)
  #    - läuft auf workflow_dispatch, wenn publish_local == false
  #    - wird übersprungen, wenn Commit-Message [local-docs] enthält
  # =========================================================
  render_and_publish:
    if: >
      (github.event_name == 'push' && !contains(github.event.head_commit.message, '[local-docs]'))
      || (github.event_name == 'workflow_dispatch' && inputs.publish_local == 'false')
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      # PAT für remotes::install_github (Rate-Limits vermeiden)
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Show Python
        run: python3 --version

      - name: Apply site configuration (from site-config.yaml)
        if: hashFiles('scripts/configure.py') != ''
        run: python3 scripts/configure.py --noninteractive

      - name: Create CI profile (output=docs)
        run: |
          cat > _quarto-profile-ci.yml <<'YML'
          project:
            output-dir: docs
          execute:
            freeze: false
          YML

      - name: Set up Quarto + TinyTeX
        uses: quarto-dev/quarto-actions/setup@v2
        with:
          tinytex: true

      # ---------- R + Systembibliotheken ----------
      - name: Set up R
        uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true

      - name: Install system libs for R packages
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgdal-dev libgeos-dev libproj-dev libudunits2-dev libsqlite3-dev \
            libnetcdf-dev netcdf-bin \
            libxml2-dev libcurl4-openssl-dev libssl-dev \
            libgit2-dev libgmp-dev \
            libfontconfig1-dev libfreetype6-dev libharfbuzz-dev libfribidi-dev \
            libpng-dev \
            libx11-dev libglu1-mesa-dev freeglut3-dev mesa-common-dev

      - name: Install CRAN packages
        run: |
          Rscript -e 'pkgs <- c(
            "knitr","rmarkdown","tinytex",
            "tidyverse","ggplot2","readr","dplyr","stringr","purrr","tibble","tidyr",
            "sf","terra","stars","lwgeom","exactextractr","units","s2",
            "raster","ncdf4","RNetCDF",
            "leaflet","leafem","leafsync","leafpop","mapview","maptiles","htmlwidgets","DT",
            "classInt","e1071","caret","ClusterR","NbClust","clusternomics",
            "data.table","lubridate","broom",
            "xml2","XML","png",
            "here","devtools","remotes","renv",
            "tmap","tmaptools","matrixStats",
            "ggrepel","ggpubr","ggsci","viridis",
            "rgl"
          );
          ip <- rownames(installed.packages());
          install.packages(setdiff(unique(pkgs), ip))'

      - name: Install GitHub packages
        run: |
          Rscript -e 'print(paste("Has PAT:", nzchar(Sys.getenv("GITHUB_PAT"))))'
          Rscript -e 'remotes::install_github(c(
            "mrke/NicheMapR",
            "bluegreen-labs/fieldClim",
            "bluegreen-labs/microclimf",
            "bluegreen-labs/micropoint"
          ), upgrade = "never", dependencies = TRUE)'

      # ---------- Quarto Extensions ----------
      - name: Install Quarto extensions (roughnotation, lightbox, tachyons)
        run: |
          quarto install extension quarto-ext/roughnotation || true
          quarto install extension quarto-ext/lightbox || true
          quarto install extension quarto-ext/tachyons || true

      - name: Show versions
        run: |
          quarto --version
          Rscript -e 'sessionInfo()' || true
          pandoc --version | head -n 2
          tlmgr --version || true

      # ---------- Render (inkl. CDSE Secrets falls gesetzt) ----------
      - name: Render site (HTML + alt formats via format-links)
        env:
          QUARTO_PROFILE: ci
          CDSE_CLIENT_ID: ${{ secrets.CDSE_CLIENT_ID }}
          CDSE_CLIENT_SECRET: ${{ secrets.CDSE_CLIENT_SECRET }}
        run: |
          quarto render . --log-level=INFO

      # Fallback: falls in _site/ gerendert wurde
      - name: Fallback _site -> docs
        run: |
          if [ -d "_site" ] && [ ! -f "docs/index.html" ]; then
            echo "Profile ignored; copying _site/ to docs/"
            rm -rf docs
            mkdir -p docs
            cp -a _site/. docs/
          fi

      - name: Sanity check
        run: |
          test -f docs/index.html || (echo "docs/index.html missing" && exit 1)
          echo "Listing alt formats under docs/:"
          find docs -type f \( -name '*.pdf' -o -name '*.docx' \) -printf '%P\n' || true

      - name: Commit & push docs
        if: github.ref == 'refs/heads/main'
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add -f docs
          git commit -m "CI: render site (HTML+PDF+DOCX) [skip ci]" || echo "Nothing to commit"
          git push

  # =========================================================
  # B) PUBLISH LOCAL (KEIN RENDER/COMPUTE)
  #    - läuft auf workflow_dispatch, wenn publish_local == true
  #    - oder wenn Commit-Message [local-docs] enthält
  #    - prüft nur, ob docs/ da ist, pusht es (falls nötig)
  # =========================================================
  publish_local:
    if: >
      (github.event_name == 'workflow_dispatch' && inputs.publish_local == 'true')
      || (github.event_name == 'push' && contains(github.event.head_commit.message, '[local-docs]'))
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Sanity check for local docs
        run: |
          if [ ! -f "docs/index.html" ]; then
            echo "docs/index.html missing. Please build locally first (quarto render) and commit docs/."
            exit 1
          fi
          # optional: sicherstellen, dass Pages keine Jekyll-Pipeline erzwingt
          touch docs/.nojekyll

      - name: Commit & push docs (no render)
        if: github.ref == 'refs/heads/main'
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add -f docs/.nojekyll || true
          git commit -m "CI: publish local docs only [skip ci]" || echo "Nothing to commit"
          git push
